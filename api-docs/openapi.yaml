openapi: 3.0.2
info:
  title: Zonenalarmsystem (FAE-Team2-Service)
  description: >-
    Dies ist die REST-Dokumenation für das Zonenalarmsystem. Weitere Erläuterungen zum Projekt können dem [Domain Vision Statement](https://github.com/Archi-Lab-FAE/fae-team-2-documentation).
  termsOfService: 'https://fae.archi-lab.io/'
  contact:
    email: apiteam@fae.th-koeln.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0

externalDocs:
  description: Global Documentation
  url: 'https://fae.archi-lab.io/'

servers:
  - url: 'https://api.fae.archi-lab.io/team-2'
    description: Production server
  - url: 'http://localhost:8080'
    description: Local test server

tags:
  - name: Demenziell Erkrankter
    description: Genaue Beschreibung auf in der [Dokumentation](https://fae.archi-lab.io/glossary/2019/11/15/Glossary-dementiell-Erkrankter.html)
  - name: Positionssender
    description: Genaue Beschreibung auf in der [Dokumentation](https://fae.archi-lab.io/glossary/2019/11/15/Glossary-Positionssender.html)
  - name: Zone
    description: Genaue Beschreibung auf in der [Dokumentation](https://fae.archi-lab.io/glossary/2019/11/15/Glossary-Zone.html)

paths:
  '/demenziellerkrankter':
    post:
      tags:
        - Demenziell Erkrankter
      summary: Einen neuen Erkankten in die Datenbank aufnehmen
      operationId: addDemenziellErkankten
      requestBody:
        description: Objekt, welches angelegt werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemenziellErkrankterDTO'
        required: true
      responses:
        '204':
          description: Objekt wurde erstellt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemenziellErkrankterDTO'
        '405':
          description: Invalide Daten.}

  '/demenziellerkrankter/{id}':
    put:
      tags:
        - Demenziell Erkrankter
      summary: Daten eines Erkranten aktualisieren
      operationId: updateDemenziellerkankten
      parameters:
        - name: id
          in: path
          description: ID des demenziell Erkranten, welcher aktualisiert werden soll.
          required: true
          schema:
            type: string
      requestBody:
        description: Objekt eines demenziell Erkranten, welches aktualisiert werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemenziellErkrankterDTO'
        required: true
      responses:
        '200':
          description: Objekt wurde aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemenziellErkrankterDTO'
        '400':
          description: Die ID ist nicht valide.
        '404':
          description: Objekt konnte nicht gefunden werden.
        '405':
          description: Validationsfehler

    get:
      tags:
        - Demenziell Erkrankter
      summary: Die Daten eines Demenziell Erkrankten auslesen.
      operationId: getDemenziellErkankten
      parameters:
        - name: id
          in: path
          description: ID des demenziell Erkranten, welcher ausgelesen werden soll.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemenziellErkrankterDTO'


  '/positionssender/findInRadius':
    get:
      tags:
        - Positionssender
      summary: Liefert eine Liste aller Positionssendermit der ID
      operationId: findPositionssenderInRadius
      parameters:
        - name: radius
          in: query
          description: Radius um die Position, in welcher gesucht werden soll.
          required: true
          schema:
            type: number
            format: double
        - name: laengengrad
          in: query
          description: Laengengrad des Radius um die Position, in welcher gesucht werden soll.
          required: true
          schema:
            type: number
            format: double
        - name: breitengrad
          in: query
          description: Breitengrad des Radius um die Position, in welcher gesucht werden soll.
          required: true
          schema:
            type: number
            format: double
      responses:
        '200':
          description: Liste aller Positionssender im Radius
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionssenderDTO'
        '405':
          description: Invalide Daten

  '/positionssender/{id}':
    get:
      tags:
        - Positionssender
      summary: Liefert den Positionssendermit der ID
      operationId: findPositionssender
      parameters:
        - name: id
          in: path
          description: ID des Positionssender der zurückgeliefert werden soll.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionssenderDTO'
        '400':
          description: ID ist nicht valide.
        '404':
          description: Positionssender konnte nicht gefunden werden.

    put:
      tags:
        - Positionssender
      summary: Daten eines Positionssenders aktualisieren
      operationId: updatePositionssender
      parameters:
        - name: id
          in: path
          description: ID des Positionssender der aktualisiert werden soll.
          required: true
          schema:
            type: string
      requestBody:
        description: Objekt eines Positionssenders, welches aktualisiert werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionssenderDTO'
        required: true
      responses:
        '200':
          description: Objekt wurde aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionssenderDTO'
        '400':
          description: Die ID ist nicht valide.
        '404':
          description: Objekt konnte nicht gefunden werden.
        '405':
          description: Validationsfehler

  '/positionssender':
    get:
      tags:
        - Positionssender
      summary: Liefert alle Positionssender.
      operationId: findAllPositionssender
      parameters:
        - in: query
          name: zoneId
          description: Ergebnis nach Zone filtern
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionssenderDTO'
        '400':
          description: ID ist nicht valide.
        '404':
          description: Positionssender konnte nicht gefunden werden.

    post:
      tags:
        - Positionssender
      summary: Einen neuen Positionssender in die Datenbank aufnehmen
      operationId: addPositionssender
      requestBody:
        description: Objekt, welches angelegt werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionssenderDTO'
        required: true
      responses:
        '204':
          description: Objekt wurde erstellt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionssenderDTO'
        '405':
          description: Invalide Daten.

  '/positionssender/{id}/zone':
    get:
      tags:
        - Positionssender
      summary: Liefer alle Zonen des Positionssenders
      description: Liefert alle Zonene des Positionssenders
      operationId: getZonenByPositionssenderId
      parameters:
        - name: id
          in: path
          description: ID des Positionssenders
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ZoneDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found

  '/zone':
    post:
      tags:
        - Zone
      summary: Eine neue Zone in die Datenbank aufnehmen
      operationId: addZone
      requestBody:
        description: Objekt, welches angelegt werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDTO'
        required: true
      responses:
        '204':
          description: Objekt wurde erstellt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'
        '405':
          description: Invalide Daten.

  '/zone/{id}':
    get:
      tags:
        - Zone
      summary: Die Daten einer Zone auslesen.
      operationId: getZone
      parameters:
        - name: id
          in: path
          description: ID der Zone die zurückgeliefert werden soll.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'

    put:
      tags:
        - Zone
      summary: Daten einer Zone
      operationId: updateZone
      parameters:
        - name: id
          in: path
          description: ID der Zone die aktualisiert werden soll.
          required: true
          schema:
            type: string
      requestBody:
        description: Objekt einer Zone, welches aktualisiert werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneDTO'
        required: true
      responses:
        '200':
          description: Objekt wurde aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneDTO'
        '400':
          description: Die ID ist nicht valide.
        '404':
          description: Objekt konnte nicht gefunden werden.
        '405':
          description: Validationsfehler


components:
  schemas:
    DemenziellErkrankterDTO:
      type: object
      properties:
        id:
          type: string
          example: 'f33c6fa8-1697-11ea-8d71-362b9e155667'
        vorname:
          type: string
          example: 'Kutz'
        name:
          type: string
          example: 'Löhler'
        positionssender:
          type: array
          items:
            $ref: '#/components/schemas/PositionssenderDTO'
      required:
        - id
        - vorname
        - nachname

    PositionssenderDTO:
      type: object
      properties:
        id:
          type: string
          example: 'f33c6cd8-1697-11ea-8d71-362b9e155667'
        letztesSignal:
          type: string
          format: date-time
        letzteWartung:
          type: string
          format: date-time
        position:
          $ref: '#/components/schemas/PositionDTO'
      required:
        - id

    PositionDTO:
      type: object
      properties:
        laengengrad:
          type: number
          format: double
          example: '51.042755'
        breitengrad:
          type: number
          format: double
          example: '7.287333'
      required:
        - laengengrad
        - breitengrad

    ZoneDTO:
      type: object
      properties:
        zoneId:
          type: string
          example: '8f926d33-27bd-4afd-aabb-b160a6402348'
        typ:
          $ref: '#/components/schemas/ZonenTyp'
        positionen:
          type: array
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/PositionDTO'
          example:
            - laengengrad: 51.042755
              breitengrad: 7.287333
            - laengengrad: 51.042755
              breitengrad: 7.287333
      required:
        - zoneId
        - typ
        - positionen

    ZonenTyp:
      type: string
      enum: ['GEWOHNT', 'UNGEWOHNT']


