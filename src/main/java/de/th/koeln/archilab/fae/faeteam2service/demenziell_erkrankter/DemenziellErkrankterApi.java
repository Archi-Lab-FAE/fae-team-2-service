/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package de.th.koeln.archilab.fae.faeteam2service.demenziell_erkrankter;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-12-19T10:48:55.616846300+01:00[Europe/Berlin]")
@Api(value = "demenziellerkrankter", description = "the demenziellerkrankter API")
public interface DemenziellErkrankterApi {

    @ApiOperation(value = "Einen neuen Erkankten in die Datenbank aufnehmen", nickname = "addDemenziellErkankten", notes = "", response = DemenziellErkrankterDTO.class, tags = {"Demenziell Erkrankter",})
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = "Objekt wurde erstellt.", response = DemenziellErkrankterDTO.class),
            @ApiResponse(code = 405, message = "Invalide Daten.}")})
    @RequestMapping(value = "/demenziellerkrankter",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<DemenziellErkrankterDTO> addDemenziellErkankten(@ApiParam(value = "Objekt, welches angelegt werden soll.", required = true) @Valid @RequestBody DemenziellErkrankterDTO body);


    @ApiOperation(value = "Die Daten eines Demenziell Erkrankten auslesen.", nickname = "getDemenziellErkankten", notes = "", response = DemenziellErkrankterDTO.class, tags = {"Demenziell Erkrankter",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = DemenziellErkrankterDTO.class)})
    @RequestMapping(value = "/demenziellerkrankter/{id}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<DemenziellErkrankterDTO> getDemenziellErkankten(@ApiParam(value = "ID des demenziell Erkranten, welcher ausgelesen werden soll.", required = true) @PathVariable("id") String id);


    @ApiOperation(value = "Daten eines Erkranten aktualisieren", nickname = "updateDemenziellerkankten", notes = "", response = DemenziellErkrankterDTO.class, tags = {"Demenziell Erkrankter",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Objekt wurde aktualisiert.", response = DemenziellErkrankterDTO.class),
            @ApiResponse(code = 400, message = "Die ID ist nicht valide."),
            @ApiResponse(code = 404, message = "Objekt konnte nicht gefunden werden."),
            @ApiResponse(code = 405, message = "Validationsfehler")})
    @RequestMapping(value = "/demenziellerkrankter/{id}",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.PUT)
    ResponseEntity<DemenziellErkrankterDTO> updateDemenziellerkankten(@ApiParam(value = "Objekt eines demenziell Erkranten, welches aktualisiert werden soll.", required = true) @Valid @RequestBody DemenziellErkrankterDTO body, @ApiParam(value = "ID des demenziell Erkranten, welcher aktualisiert werden soll.", required = true) @PathVariable("id") String id);

}
