/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.16).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package de.th.koeln.archilab.fae.faeteam2service.zone;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-30T18:11:16.334Z[GMT]")
@Api(value = "zone", description = "the zone API")
public interface ZoneApi {

    @ApiOperation(value = "Eine neue Zone in die Datenbank aufnehmen", nickname = "addZone", notes = "", response = ZoneDTO.class, tags = {"Zone",})
    @ApiResponses(value = {
            @ApiResponse(code = 204, message = "Objekt wurde erstellt.", response = ZoneDTO.class),
            @ApiResponse(code = 404, message = "Demenziell Erkrankter nicht gefunden."),
            @ApiResponse(code = 405, message = "Invalide Daten.")})
    @RequestMapping(value = "/zone",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.POST)
    ResponseEntity<ZoneDTO> addZone(@ApiParam(value = "Objekt, welches angelegt werden soll.", required = true) @Valid @RequestBody ZoneDTO body
    );


    @ApiOperation(value = "Die Daten einer Zone auslesen.", nickname = "getZone", notes = "", response = ZoneDTO.class, tags = {"Zone",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = ZoneDTO.class)})
    @RequestMapping(value = "/zone/{id}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<ZoneDTO> getZone(@ApiParam(value = "ID der Zone die zur√ºckgeliefert werden soll.", required = true) @PathVariable("id") String id
    );


    @ApiOperation(value = "Daten einer Zone", nickname = "updateZone", notes = "", response = ZoneDTO.class, tags = {"Zone",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "Objekt wurde aktualisiert.", response = ZoneDTO.class),
            @ApiResponse(code = 400, message = "Die ID ist nicht valide."),
            @ApiResponse(code = 404, message = "Objekt konnte nicht gefunden werden."),
            @ApiResponse(code = 405, message = "Validationsfehler")})
    @RequestMapping(value = "/zone/{id}",
            produces = {"application/json"},
            consumes = {"application/json"},
            method = RequestMethod.PUT)
    ResponseEntity<ZoneDTO> updateZone(@ApiParam(value = "Objekt einer Zone, welches aktualisiert werden soll.", required = true) @Valid @RequestBody ZoneDTO body
            , @ApiParam(value = "ID der Zone die aktualisiert werden soll.", required = true) @PathVariable("id") String id
    );

}
